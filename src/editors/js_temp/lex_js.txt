{NID}"abstract"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"boolean"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"break"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"byte"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"case"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"catch"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"char"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"class"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"const"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"continue"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"debugger"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"default"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"delete"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"do"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"double"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"else"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"enum"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"export"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"extends"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"final"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"finally"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"float"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"for"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"function"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"goto"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"if"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"implements"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"import"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"in"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"instanceof"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"int"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"interface"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"long"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"native"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"new"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"package"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"private"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"protected"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"public"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"return"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"short"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"static"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"super"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"switch"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"synchronized"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"this"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"throw"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"throws"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"transient"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"try"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"typeof"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"var"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"void"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"volatile"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"while"{NID}  { return LexerScheme::StyleType::KEYWORD; }
{NID}"with"{NID}  { return LexerScheme::StyleType::KEYWORD; }
